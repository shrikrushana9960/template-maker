diff --git a/src/components/Toolbar.tsx b/src/components/Toolbar.tsx
index 2fb66c9..c363d0b 100644
--- a/src/components/Toolbar.tsx
+++ b/src/components/Toolbar.tsx
@@ -51,14 +51,14 @@ const Toolbar: React.FC<ToolbarProps> = ({
   onDeletePage,
   onPrevPage,
   onNextPage,
-  onAutofill,
+  // onAutofill,
   currentPage,
   totalPages,
 }) => {
   const fileInputRef = React.useRef<HTMLInputElement>(null);
 
-  const [loading, setLoading] = useState(false);
-  const [saveLoading, setSaveLoading] = useState(false);
+  // const [loading, setLoading] = useState(false);
+  // const [saveLoading, setSaveLoading] = useState(false);
   const navigate = useNavigate();
   const [modal, setModal] = useState<ModalConfig | null>(null);
   const queryParams = new URLSearchParams(location.search);
@@ -80,7 +80,7 @@ const Toolbar: React.FC<ToolbarProps> = ({
         onConfirm: async (templateName: string) => {
           if (!templateName) return;
 
-          setSaveLoading(true);
+          // setSaveLoading(true);
           try {
             await saveTemplateToServer(templateName, currentPages);
             navigate("/");
@@ -94,7 +94,7 @@ const Toolbar: React.FC<ToolbarProps> = ({
               }`
             );
           } finally {
-            setSaveLoading(false);
+            // setSaveLoading(false);
           }
         },
         onCancel: () => setModal(null),
@@ -150,7 +150,7 @@ const Toolbar: React.FC<ToolbarProps> = ({
       <div className="container mx-auto px-4 py-2 flex items-center justify-between">
         <div className="flex items-center space-x-6">
           <div
-            className="overflow-hidden cursor-pointer flex items-center"
+            className="cursor-pointer flex items-center"
             onClick={() => navigate("/")}
           >
             <img
@@ -163,8 +163,7 @@ const Toolbar: React.FC<ToolbarProps> = ({
           {/* File Section */}
           <div className="flex flex-col items-center">
             <span className="text-xs font-semibold text-gray-500">File</span>
-            <div className="flex items-center gap-4 p-2 bg-white">
-            
+            <div className="flex items-center bg-white">
               <button
                 onClick={onNewTemplate}
                 className="flex flex-col items-center p-3 rounded-md hover:bg-gray-100 transition-colors"
@@ -173,7 +172,6 @@ const Toolbar: React.FC<ToolbarProps> = ({
                 <span className="text-xs text-gray-700 mt-1">New</span>
               </button>
 
-             
               <button
                 onClick={handleImportClick}
                 className="flex flex-col items-center p-3 rounded-md hover:bg-gray-100 transition-colors"
@@ -190,7 +188,6 @@ const Toolbar: React.FC<ToolbarProps> = ({
                 onChange={handleFileChange}
               />
 
-             
               <button
                 onClick={handleSaveTemplate}
                 className="flex flex-col items-center p-3 rounded-md hover:bg-gray-100 transition-colors"
@@ -199,7 +196,6 @@ const Toolbar: React.FC<ToolbarProps> = ({
                 <span className="text-xs text-gray-700 mt-1">Save</span>
               </button>
 
-            
               <button
                 onClick={onSaveTemplate}
                 className="flex flex-col items-center p-3 rounded-md hover:bg-gray-100 transition-colors text-center"
diff --git a/src/pages/listing.tsx b/src/pages/listing.tsx
index 52bbc60..077e1cd 100644
--- a/src/pages/listing.tsx
+++ b/src/pages/listing.tsx
@@ -10,7 +10,7 @@ import {
 } from "../utils/serverApi";
 import Modal from "../components/Modal";
 import investSet from "../assets/investSet.png";
-import reportDataJson from './reportData.json';
+import reportDataJson from "./reportData.json";
 import Delete from "../assets/delete.svg";
 import { exportAsPdf } from "../utils/exportUtils";
 import Edit from "../assets/editIcon.svg";
@@ -29,7 +29,7 @@ interface ModalConfig {
   title: string;
   message: string;
   type: "info" | "confirm" | "input";
-  onConfirm: ((inputValue?: string) => void) | (() => void); 
+  onConfirm: ((inputValue?: string) => void) | (() => void);
   onCancel?: () => void;
   placeholder?: string;
 }
@@ -63,7 +63,6 @@ const LoadingOverlay: React.FC<{ message?: string }> = ({ message }) => (
   </div>
 );
 
-
 const ListingScreen: React.FC = () => {
   const reportData: any = reportDataJson;
   const [templates, setTemplates] = useState<Templates[]>([]);
@@ -124,22 +123,20 @@ const ListingScreen: React.FC = () => {
 
   // FIX: Replaced applyAutofillToPages with logic that uses structured data
   const applyReportFillToPages = (pages: PageData[]): PageData[] => {
-   
-
     return pages.map((page) => {
-      const elementCounters: Record<ElementData["type"], number> = {
-        header: 0,
-        text: 0,
-        table: 0,
-        chart: 0,
-        image: 0,
-      };
+      // const elementCounters: Record<ElementData["type"], number> = {
+      //   header: 0,
+      //   text: 0,
+      //   table: 0,
+      //   chart: 0,
+      //   image: 0,
+      // };
 
       return {
         ...page,
         elements: page.elements.map((element) => {
-          const elementIndex = elementCounters[element.type]++;
-          let newUpdates: Partial<ElementData> = {};
+          // const elementIndex = elementCounters[element.type]++;
+          const newUpdates: Partial<ElementData> = {};
           console.log(element?.id);
           switch (element.type) {
             case "text":
@@ -150,36 +147,34 @@ const ListingScreen: React.FC = () => {
               break;
 
             case "image":
-                newUpdates.data = {
-                  ...element.data,
-                  src: reportData[element?.id] || "",
-                };
+              newUpdates.data = {
+                ...element.data,
+                src: reportData[element?.id] || "",
+              };
               break;
 
             case "table":
-            
-                newUpdates.data = {
-                  ...element.data,
-                  table: reportData[element?.id] || [],
-                };
-             
+              newUpdates.data = {
+                ...element.data,
+                table: reportData[element?.id] || [],
+              };
+
               break;
 
             case "chart":
-                newUpdates.data = {
-                  ...element.data,
-                  labels: reportData?.[element?.id]?.labels || [],
-                  chartType: element.data.chartType || "pie",
-                  datasets: [
-                    {
-                      label: "",
-                      data: reportData?.[element?.id]?.data || [],
-                      backgroundColor:
-                        reportData?.[element?.id]?.colors || [],
-                    },
-                  ],
-                };
-           
+              newUpdates.data = {
+                ...element.data,
+                labels: reportData?.[element?.id]?.labels || [],
+                chartType: element.data.chartType || "pie",
+                datasets: [
+                  {
+                    label: "",
+                    data: reportData?.[element?.id]?.data || [],
+                    backgroundColor: reportData?.[element?.id]?.colors || [],
+                  },
+                ],
+              };
+
               break;
 
             default:
@@ -208,7 +203,10 @@ const ListingScreen: React.FC = () => {
 
       // 3. Export as PDF
       toastr.info("Generating PDF...");
-      await exportAsPdf(mockedPages,template.name+(new Date().toISOString())+".pdf");
+      await exportAsPdf(
+        mockedPages,
+        template.name + new Date().toISOString() + ".pdf"
+      );
 
       toastr.success(
         `Mock data applied and PDF exported successfully for "${template.name}"!`
